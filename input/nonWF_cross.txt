
initialize() 
{
initializeSLiMModelType("nonWF");
initializeTreeSeq();
initializeSex("A");
initializeMutationType("m1", 0.5, "g", -0.03, 0.2);
m1.convertToSubstitution = T;
initializeGenomicElementType("g1", m1, 1.0);
initializeGenomicElement(g1, 0, 99999);
initializeMutationRate(2.5e-9);
initializeRecombinationRate(4e-8);
}


reproduction() {

// generate an offspring from each individual in each crossed subpop by 
// crossing the two parents, add them to new "p3" subpop	
// practically, create 1 M and 1 F offspring, add to cage "p3"
p3.addCrossed(subpop.individuals[0], subpop.individuals[1], sex=NULL);
}

1 early() {

// read in processed euro trees
sim.readFromPopulationFile("C://Users/aangu/Documents/Obbard_proj/output/euro_processed.trees");

// remove original euro subpop p1 -- not necessary anymore
p1.removeSubpopulation();

// create empty subpop p3 to be used for offspring of crosses
// p3 is the cage
sim.addSubpop("p3", 0);

}

2 late() {
		
sim.outputFull(ages=T);
}
